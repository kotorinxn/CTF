def f(x)
  if x < 3 then
    1
  else
    f(x - 1) + 1;

def f(x)
  if x < 2 then
    1
  else
    f(x)

def foo(a b) a*a + 2*a*b + b*b;
def bar(a) foo(a,4) + bar(31337);
bar(10);

def f(n)
  x = 0
  for i = 1, n < i, 1 in
    x = x + i;

def binary> 10 (LHS RHS)
  RHS < LHS;

1 > 2;

<main+3730>

# Logical unary not.
def unary!(v)
  if v then
    0
  else
    1;

# Unary negate.
def unary-(v)
  0-v;

# Define > with the same precedence as <.
def binary> 10 (LHS RHS)
  RHS < LHS;

# Binary logical or, which does not short circuit.
def binary| 5 (LHS RHS)
  if LHS then
    1
  else if RHS then
    1
  else
    0;

# Binary logical and, which does not short circuit.
def binary& 6 (LHS RHS)
  if !LHS then
    0
  else
    !!RHS;

# Define = with slightly lower precedence than relationals.
def binary = 9 (LHS RHS)
  !(LHS < RHS | LHS > RHS);

# Define ':' for sequencing: as a low-precedence operator that ignores operands
# and just returns the RHS.
def binary : 1 (x y) y;


0xc5409001

0x7ff930343001
